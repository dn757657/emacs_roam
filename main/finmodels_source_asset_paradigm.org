:PROPERTIES:
:ID:       60dc70e2-c275-465f-8111-146d4af30a20
:END:
#+title: FinModels Main
#+filetags: :paradigm:structure:finmodels:
* Paradigm
cascade assembly

* Dev
- start with simple real case, a source into a forecast into an assembly with forecast as source, expand this to multiple units if successful
- onyl one assembler function in assembly object
- see what that doesq

* Assembly

** DFAssembly
- assembly using collapsing irregular lists algorithm
- sources and sampled and appended to list, as is forecast, as is fill, then collapsed by list order into first list item using processor and assembler function

*** Sources
- sources can be list or single
- use carefully as sources will be assembled in same way as forecast

*** Forecast
- function with strat, end , training params
- returns future values in df
- will be assembled using assembler function

*** Issues
- full index fill methodology
- not fully understanding how entire system works, expanding and collpasing lists is difficult to track

* Ideas
- could someday integrate with emacs by defining standard capture templates for model components?
